"use strict";(()=>{var e={};e.id=3748,e.ids=[3748],e.modules={7096:e=>{e.exports=require("bcrypt")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},8721:(e,r,a)=>{a.r(r),a.d(r,{config:()=>x,default:()=>w,routeModule:()=>v});var t={};a.r(t),a.d(t,{default:()=>g});var s=a(1802),i=a(7153),n=a(6249);let l=require("next-auth");var u=a.n(l);let o=require("@next-auth/prisma-adapter");var p=a(1920);let d=require("next-auth/providers/credentials");var c=a.n(d),h=a(7096),m=a.n(h);let g=u()({adapter:(0,o.PrismaAdapter)(p.Z),providers:[c()({id:"credentials",name:"credentials",credentials:{email:{label:"Email",type:"email",placeholder:"john@example.com"},password:{lable:"Senha",type:"password"}},authorize:async e=>{try{let r=await p.Z.user.findFirst({where:{email:e?.email},include:{purchases:!0}});if(null===r)return null;if(await m().compare(e.password,r.password))return r;return console.log("Hash not matched logging in"),null}catch(e){return console.log("Authorize error:",e),null}}})],callbacks:{jwt:async({token:e,user:r})=>(r&&(e.id=r.id,e.role=r.role,e.cpf=r.cpf,e.phone=r.phone,e.purchases=r.purchases),e),session:({session:e,token:r})=>(r&&(e.id=r.id,e.role=r.role,e.cpf=r.cpf,e.phone=r.phone,e.purchases=r.purchases),e)},pages:{signIn:"/auth/signin",signOut:"/auth/signout"},secret:process.env.SECRET,session:{strategy:"jwt"}}),f=s.PagesAPIRouteModule,w=(0,n.l)(t,"default"),x=(0,n.l)(t,"config"),v=new f({definition:{kind:i.x.PAGES_API,page:"/api/auth/[...nextauth]",pathname:"/api/auth/[...nextauth]",bundlePath:"",filename:""},userland:t})},1920:(e,r,a)=>{let t;a.d(r,{Z:()=>i});let s=require("@prisma/client");t=new s.PrismaClient;let i=t}};var r=require("../../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),a=r.X(0,[4222],()=>__webpack_exec__(8721));module.exports=a})();